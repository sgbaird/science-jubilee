:py:mod:`science_jubilee.tools.SyringeExtruder`
===============================================

.. py:module:: science_jubilee.tools.SyringeExtruder


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   science_jubilee.tools.SyringeExtruder.SyringeExtruder




.. py:class:: SyringeExtruder(index, name, config)


   Bases: :py:obj:`science_jubilee.tools.Tool.Tool`

   A class representation of a syringe for extrusion 3D printing.

   :param Tool: The base tool class
   :type Tool: :class:`Tool`

   .. py:method:: load_config(config)

      Loads the confirguration file for the syringe tool

      :param config: Name of the config file for your syringe. Expects the file to be in /tools/configs
      :type config: str


   .. py:method:: post_load()

      Query the object model after loading the tool to find the extruder number of this syringe.



   .. py:method:: check_bounds(pos)

      Disallow commands outside of the syringe's configured range

      :param pos: The E position to check
      :type pos: float


   .. py:method:: make_e(x, y, z)


   .. py:method:: dist(start, end)


   .. py:method:: wipe_nozzle(x=285, y=250, z=0.2)


   .. py:method:: wipe_tower(x=285, y=250, z=0.2)


   .. py:method:: move_extrude(x=None, y=None, z=None, s=180, multiplier=1, e=None)


   .. py:method:: _aspirate(vol: float, s: int = 2000)

      Aspirate a certain volume in milliliters. Used only to move the syringe; to aspirate from a particular well, see aspirate()

      :param vol: Volume to aspirate, in milliliters
      :type vol: float
      :param s: Speed at which to aspirate in mm/min, defaults to 2000
      :type s: int, optional


   .. py:method:: _dispense(vol, s: int = 2000)

      Dispense a certain volume in milliliters. Used only to move the syringe; to dispense into a particular well, see dispense()

      :param vol: Volume to dispense, in milliliters
      :type vol: float
      :param s: Speed at which to dispense in mm/min, defaults to 2000
      :type s: int, optional


   .. py:method:: aspirate(vol: float, location: Union[science_jubilee.labware.Labware.Well, Tuple, science_jubilee.labware.Labware.Location], s: int = 2000)

      Aspirate a certain volume from a given well.

      :param vol: Volume to aspirate, in milliliters
      :type vol: float
      :param location: The location (e.g. a `Well` object) from where to aspirate the liquid from.
      :type location: Union[Well, Tuple, Location]
      :param s: Speed at which to aspirate in mm/min, defaults to 2000
      :type s: int, optional


   .. py:method:: dispense(vol: float, location: Union[science_jubilee.labware.Labware.Well, Tuple, science_jubilee.labware.Labware.Location], s: int = 2000)

      Dispense a certain volume into a given well.

      :param vol:  Volume to dispense, in milliliters
      :type vol: float
      :param location: The location to dispense the liquid into.
      :type location: Union[Well, Tuple, Location]
      :param s: Speed at which to dispense in mm/min, defaults to 2000
      :type s: int, optional




